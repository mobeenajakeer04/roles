---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- import_tasks: refresh_install_details.yml

##########
# SETUP
- name: engine - install engine-specific packages
  yum:
    state: present
    name:
      - libgcc.i686
      - ed
      - util-linux-ng
      - gcc
      - gcc-c++
      - perl
  retries: 3
  delay: 5
  register: __ibm_infosvr_engine_yum
  until: __ibm_infosvr_engine_yum is succeeded

- name: engine - create required groups
  group: name={{ item }}
  with_items:
    - "{{ ibm_infosvr_group_dsadmin }}"

- name: engine - create required users
  user: name={{ item.user }} group={{ item.group }} password={{ item.password }} shell=/bin/bash
  with_items:
    - group: "{{ ibm_infosvr_group_dsadmin }}"
      user: "{{ ibm_infosvr_user_dsadmin }}"
      password: "{{ ibm_infosvr_upwd_dsadmin |password_hash('sha512', ibm_infosvr_salt) }}"
  loop_control:
    label: "{{ item.user }} - {{ item.group }}"

- name: engine - apply response file templates
  template: src={{ item.file }} dest={{ item.target }} owner=root group=root mode=0644
  with_items:
    - file: 'engine-v{{ __ibm_infosvr_version|replace(".", "") }}.j2'
      target: "{{ ibm_infosvr_tmp.linux }}/is-suite/engine.rsp"
  when: (ibm_infosvr_version_xml.find('engine="true"') == -1)

- name: engine - parse engine-specific variables
  include_vars: file=engine.yml

- import_tasks: kernel-and-firewall.yml

##########
# BASE INSTALLATION
- name: engine - install engine tier silently
  shell: >
          umask 022 &&
          {{ ibm_infosvr_tmp.linux }}/is-suite/setup
          -rsp {{ ibm_infosvr_tmp.linux }}/is-suite/engine.rsp
          {% if ibm_infosvr_force.engine is defined and ibm_infosvr_force.engine %}-force{% endif %}
  args:
    executable: /bin/bash
  when: (ibm_infosvr_version_xml.find('engine="true"') == -1)
  register: __ibm_infosvr_engine_install

- import_tasks: db2client.yml

# Next two tasks for RHEL 7 only with v11.5 (http://www.ibm.com/support/docview.wss?uid=swg21974325)
- name: engine - configure engine tier systemd restartability (v11.5 + RHEL7)
  template:
    src: ds.rc.service.j2
    dest: /etc/systemd/system/ds.rc.service
    owner: root
    group: root
    mode: "0644"
  when: >
        (ansible_distribution == "RedHat" or ansible_distribution == "CentOS")
        and (ansible_distribution_major_version == "7")
        and (__ibm_infosvr_version == "11.5")

- name: engine - register DataStage in systemd (v11.5 + RHEL7)
  systemd: name=ds.rc enabled=yes state=started daemon_reload=yes
  when: >
        (ansible_distribution == "RedHat" or ansible_distribution == "CentOS")
        and (ansible_distribution_major_version == "7")
        and (__ibm_infosvr_version == "11.5")

##########
# CONFIGURATION
- name: engine - check remote database catalog status
  shell: >
          source ~/.bashrc &&
          db2 list database directory
  args:
    executable: /bin/bash
  become_user: "{{ ibm_infosvr_user_db2_instance }}"
  become: yes
  ignore_errors: yes
  register: __ibm_infosvr_db2catalog_completion
  changed_when: False

- name: engine - catalog remote data nodes
  shell: >
          source ~/.bashrc &&
          db2 {{ item }}
  args:
    executable: /bin/bash
  with_items:
    - "catalog tcpip node REPO \
      remote {{ hostvars[__ibm_infosvr_db_host].ansible_fqdn|upper }} \
      server {{ ibm_infosvr_ports.db2 }}"
    - "catalog database XMETA at node REPO"
    - "catalog database IADB at node REPO"
    - "terminate"
  become_user: "{{ ibm_infosvr_user_db2_instance }}"
  become: yes
  when: not __ibm_infosvr_db2catalog_completion.stdout.find('XMETA') != -1

- name: engine - add DataStage user to DB2 instance group
  user: name={{ ibm_infosvr_user_dsadmin }} groups={{ ibm_infosvr_group_db2_instance }} shell=/bin/bash append=yes

- name: engine - setup DataStage user environment for DB2
  blockinfile:
    dest: /home/{{ ibm_infosvr_user_dsadmin }}/.bashrc
    marker: "# {mark} The following three lines have been added to be able to access DB2 client."
    block: |
      if [ -f /home/{{ ibm_infosvr_user_db2_instance }}/sqllib/db2profile ]; then
        . /home/{{ ibm_infosvr_user_db2_instance }}/sqllib/db2profile
      fi

- name: engine - set port for IMAM agent
  lineinfile:
    dest: "{{ ibm_infosvr_install_location.linux }}/ASBNode/conf/agent.properties"
    regexp: 'agent.objectport='
    line: 'agent.objectport={{ ibm_infosvr_ports.isf_agent_object }}'

- name: engine - add DB2 libraries to dsenv
  lineinfile:
    dest: "{{ ibm_infosvr_install_location.linux }}/Server/DSEngine/dsenv"
    regexp: 'LD_LIBRARY_PATH='
    line: "        LD_LIBRARY_PATH=`dirname $DSHOME`/biginsights/IHC/c++/Linux-amd64-64/lib:\
          `dirname $DSHOME`/branded_odbc/lib:\
          `dirname $DSHOME`/DSComponents/lib:\
          `dirname $DSHOME`/DSComponents/bin:\
          $DSHOME/lib:\
          $DSHOME/uvdlls:\
          `dirname $DSHOME`/PXEngine/lib:\
          $ISHOME/jdk/jre/lib/amd64/j9vm:\
          $ISHOME/jdk/jre/lib/amd64:\
          $ASBHOME/lib/cpp:\
          $ASBHOME/apps/proxy/cpp/linux-all-x86_64:\
          {{ ibm_infosvr_install_location.db2 }}/lib64:$LD_LIBRARY_PATH"
  register: __ibm_infosvr_dsenv

- name: engine - enable DataStage operations database
  lineinfile:
    dest: "{{ ibm_infosvr_install_location.linux }}/Server/DSODB/DSODBConfig.cfg"
    regexp: 'DSODBON='
    line: 'DSODBON=1'
  become_user: "{{ ibm_infosvr_user_dsadmin }}"
  become: yes
  when: __ibm_infosvr_features.opsdb
  register: __ibm_infosvr_dsodb

- import_tasks: ops/stop_engine.yml
  when: >
          __ibm_infosvr_engine_install is changed
          or __ibm_infosvr_dsenv is changed
          or __ibm_infosvr_dsodb is changed

- import_tasks: ops/start_engine.yml
  when: >
          __ibm_infosvr_engine_install is changed
          or __ibm_infosvr_dsenv is changed
          or __ibm_infosvr_dsodb is changed
