---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: common - install baseline packages
  yum:
    state: present
    exclude: docker*,kubelet*,kubectl*,kubeadm*
    name:
      - libselinux-python
      - unzip
      - glibc.i686
      - libstdc++.i686
      - libXp
      - libXau
      - libXext
      - libX11
      - libxcb
      - libgcc.i686
      - libXmu
      - pam.i686
      - net-tools
      - bind-utils
      - nss-softokn-freebl
      - bc
      - iptables-services
      - python-lxml
  when: (not 'ibm_information_server_external_db' in group_names)
  retries: 3
  delay: 5
  register: __ibm_infosvr_common_yum
  until: __ibm_infosvr_common_yum is succeeded

- name: common - disable selinux
  selinux: state=disabled
  register: __ibm_infosvr_selinux_result
  ignore_errors: yes
  when: (not 'ibm_information_server_external_db' in group_names)

- name: common - check selinux
  assert:
    that: "(__ibm_infosvr_selinux_result.rc is defined \
            and __ibm_infosvr_selinux_result.rc == 0)
            or (__ibm_infosvr_selinux_result.msg is defined \
            and __ibm_infosvr_selinux_result.msg == 'Unable to find file /etc/selinux/config') \
            or (__ibm_infosvr_selinux_result is changed) \
            or (__ibm_infosvr_selinux_result.state is defined \
            and __ibm_infosvr_selinux_result.state == 'disabled')"

# As suggested by this technote to reduce memory usage -- http://www-01.ibm.com/support/docview.wss?uid=swg21701446
# Will do this any time the server has less than 32GB of memory
- name: common - disable transparent hugepages (add)
  replace:
    dest: /etc/grub.conf
    regexp: ^(\s*kernel(?!.* transparent_hugepage=).*)
    replace: \1 transparent_hugepage=never
  register: __ibm_infosvr_thp_added
  when: >
        (ansible_memtotal_mb < 32768)
        and (ansible_distribution == "RedHat" or ansible_distribution == "CentOS")
        and (ansible_distribution_major_version == "6")
        and (not 'ibm_information_server_external_db' in group_names)

- name: common - disable transparent hugepages (replace)
  replace:
    name: /etc/grub.conf
    regexp: ^(\s*kernel.*? transparent_hugepage=)(?!never)(\S*)(.*)
    replace: \1never\3
  register: __ibm_infosvr_thp_replaced
  when: >
        (ansible_memtotal_mb < 32768)
        and (ansible_distribution == "RedHat" or ansible_distribution == "CentOS")
        and (ansible_distribution_major_version == "6")
        and (not 'ibm_information_server_external_db' in group_names)

- name: common - enable firewalld (generally not recommended)
  systemd: name=firewalld enabled=yes state=started
  when: ibm_infosvr_use_firewalld

##########
# RESTART (only if selinux or transparent hugepages config was changed)
- name: common - restart host to disable SELinux
  reboot:
    msg: "Restarting to ensure SELinux is disabled"
  when: >
          __ibm_infosvr_selinux_result is changed
          or __ibm_infosvr_thp_added is changed
          or __ibm_infosvr_thp_replaced is changed

##########
# EXTRACT INSTALL MEDIA (only if installation has not already been completed)
- name: common - create installation location
  file: path={{ ibm_infosvr_tmp.linux }} state=directory owner=root group=root mode=0755
  when: (ibm_infosvr_version_xml.find('NOT INSTALLED') != -1)

- name: common - check for extracted media
  stat:
    path: "{{ ibm_infosvr_tmp.linux }}/is-suite/setup"
  changed_when: False
  register: __ibm_infosvr_extracted_media

# This is a separate step from unarchive to allow files to be transferred independently to save time / bandwidth
- name: common - copy installation media
  copy:
    src: "{{ ibm_infosvr_media_dir }}/{{ ibm_infosvr_media_bin.server_tarball }}"
    dest: "{{ ibm_infosvr_tmp.linux }}/{{ ibm_infosvr_media_bin.server_tarball }}"
    force: no
  when: >
        (ibm_infosvr_version_xml.find('NOT INSTALLED') != -1)
        and (not 'ibm_information_server_external_db' in group_names)
        and (not __ibm_infosvr_extracted_media.stat.exists)

- name: common - extract installation media
  unarchive:
    src: "{{ ibm_infosvr_tmp.linux }}/{{ ibm_infosvr_media_bin.server_tarball }}"
    dest: "{{ ibm_infosvr_tmp.linux }}"
    creates: "{{ ibm_infosvr_tmp.linux }}/is-suite/setup"
    copy: no
  when: >
          (ibm_infosvr_version_xml.find('NOT INSTALLED') != -1)
          and (not 'ibm_information_server_external_db' in group_names)

- name: common - extract entitlements
  unarchive:
    src: "{{ ibm_infosvr_media_dir }}/{{ ibm_infosvr_media_bin.entitlements }}"
    dest: "{{ ibm_infosvr_tmp.linux }}/is-suite"
    creates: "{{ ibm_infosvr_tmp.linux }}/is-suite/image.properties"
  when: >
          (ibm_infosvr_version_xml.find('NOT INSTALLED') != -1)
          and (not 'ibm_information_server_external_db' in group_names)

- name: common - cleanup installation media
  file: path={{ ibm_infosvr_tmp.linux }}/{{ ibm_infosvr_media_bin.server_tarball }} state=absent
  when: (not 'ibm_information_server_external_db' in group_names)
