---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: update-jdk-win - check existing InfoSvr 64-bit JDK version
  win_shell: >
    {{ ibm_infosvr_install_location.win }}\jdk\bin\java -version
  register: __ibm_infosvr_existing_jdk64_version
  changed_when: False
  ignore_errors: True

- name: update-jdk-win - check existing InfoSvr 32-bit JDK version
  win_shell: >
    {{ ibm_infosvr_install_location.win }}\jdk32\bin\java -version
  register: __ibm_infosvr_existing_jdk32_version
  changed_when: False
  ignore_errors: True

- name: update-jdk-win - check if JDK upgrade needed
  set_fact:
    __ibm_infosvr_win_jdk64_upgrade: >-
      {{ (ibm_infosvr_jdk_definition is defined
      and ibm_infosvr_jdk_definition.filename_64 is defined
      and ibm_infosvr_jdk_definition.versionInfo_64 is defined
      and __ibm_infosvr_existing_jdk64_version.rc != 0
      or (ibm_infosvr_jdk_definition is defined
      and ibm_infosvr_jdk_definition.filename_64 is defined
      and __ibm_infosvr_existing_jdk64_version.stderr is defined
      and __ibm_infosvr_existing_jdk64_version.stderr.find(ibm_infosvr_jdk_definition.versionInfo_64) == -1)) }}
    __ibm_infosvr_win_jdk32_upgrade: >-
      {{ (ibm_infosvr_jdk_definition is defined
      and ibm_infosvr_jdk_definition.filename_32 is defined
      and __ibm_infosvr_existing_jdk32_version is defined
      and __ibm_infosvr_existing_jdk32_version.rc != 0
      or (ibm_infosvr_jdk_definition is defined
      and ibm_infosvr_jdk_definition.filename_32 is defined
      and __ibm_infosvr_existing_jdk32_version.stderr is defined
      and __ibm_infosvr_existing_jdk32_version.stderr.find(ibm_infosvr_jdk_definition.versionInfo_32) == -1)) }}

- name: update-jdk-win - ensure tmp install location exists
  win_file:
    path: "{{ ibm_infosvr_tmp.win }}"
    state: directory
  when: >
    __ibm_infosvr_win_jdk64_upgrade|bool
    or __ibm_infosvr_win_jdk32_upgrade|bool

- name: update-jdk-win - transfer 32-bit JDK update
  win_copy:
    src: "{{ ibm_infosvr_media_dir }}/{{ ibm_infosvr_jdk_definition.filename_32 }}"
    dest: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.filename_32 }}"
    force: no
  when: __ibm_infosvr_win_jdk32_upgrade|bool

- name: update-jdk-win - transfer 64-bit JDK updates
  win_copy:
    src: "{{ ibm_infosvr_media_dir }}/{{ ibm_infosvr_jdk_definition.filename_64 }}"
    dest: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.filename_64 }}"
    force: no
  when: __ibm_infosvr_win_jdk64_upgrade|bool

- name: update-jdk-win - stopping Metadata Interchange Server (service)
  win_service:
    name: mis
    state: stopped
  when: >
    __ibm_infosvr_win_jdk64_upgrade|bool
    or __ibm_infosvr_win_jdk32_upgrade|bool
  ignore_errors: yes
  register: __ibm_infosvr_win_mis_service

- name: update-jdk-win - stopping Metadata Interchange Server (bat)
  win_shell: >
    {{ ibm_infosvr_install_location.win }}\Clients\MetaBrokersAndBridges\bin\mis-stop-service.bat
  when: >
    (__ibm_infosvr_win_jdk64_upgrade|bool
    or __ibm_infosvr_win_jdk32_upgrade|bool)
    and (not (__ibm_infosvr_win_mis_service.state is defined)
    or __ibm_infosvr_win_mis_service.state != 'stopped')

- name: update-jdk-win - remove existing 64-bit JDK
  win_file: path="{{ ibm_infosvr_install_location.win }}\\jdk" state=absent
  when: __ibm_infosvr_win_jdk64_upgrade|bool

- name: update-jdk-win - remove existing 32-bit JDK
  win_file: path="{{ ibm_infosvr_install_location.win }}\\jdk32" state=absent
  when: __ibm_infosvr_win_jdk32_upgrade|bool

- name: update-jdk-win - extract Information Server 64-bit JDK updates
  win_unzip:
    src: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.filename_64 }}"
    dest: "{{ ibm_infosvr_tmp.win }}"
    creates: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.extract_path_64 }}"
    copy: no
    rm: False
  when: __ibm_infosvr_win_jdk64_upgrade|bool

- name: update-jdk-win - move updated 64-bit JDK into position
  win_shell: >
    move
    {{ ibm_infosvr_tmp.win }}\{{ ibm_infosvr_jdk_definition.extract_path_64 }}
    {{ ibm_infosvr_install_location.win }}\jdk
  when: __ibm_infosvr_win_jdk64_upgrade|bool

- name: update-jdk-win - extract Information Server 32-bit JDK updates
  win_unzip:
    src: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.filename_32 }}"
    dest: "{{ ibm_infosvr_tmp.win }}"
    creates: "{{ ibm_infosvr_tmp.win }}\\{{ ibm_infosvr_jdk_definition.extract_path_32 }}"
    copy: no
    rm: False
  when: __ibm_infosvr_win_jdk32_upgrade|bool

- name: update-jdk-win - move updated 32-bit JDK into position
  win_shell: >
    move
    {{ ibm_infosvr_tmp.win }}\{{ ibm_infosvr_jdk_definition.extract_path_32 }}
    {{ ibm_infosvr_install_location.win }}\jdk32
  when: __ibm_infosvr_win_jdk32_upgrade|bool

- name: update-jdk-win - starting Metadata Interchange Server (service)
  win_service:
    name: mis
    state: started
  when: >
    __ibm_infosvr_win_jdk64_upgrade|bool
    or __ibm_infosvr_win_jdk32_upgrade|bool
  ignore_errors: yes
  register: __ibm_infosvr_win_mis_service

- name: update-jdk-win - starting Metadata Interchange Server (bat)
  win_shell: >
    {{ ibm_infosvr_install_location.win }}\Clients\MetaBrokersAndBridges\bin\mis-start-service.bat
  when: >
    (__ibm_infosvr_win_jdk64_upgrade|bool
    or __ibm_infosvr_win_jdk32_upgrade|bool)
    and (not (__ibm_infosvr_win_mis_service.state is defined)
    or __ibm_infosvr_win_mis_service.state != 'running')

- name: update-jdk-win - cleanup installation
  win_file:
    path: "{{ ibm_infosvr_tmp.win }}"
    state: absent
